<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CIn-TRUST</title>
    <link>https://CIn-TRUST.github.io/projects/</link>
      <atom:link href="https://CIn-TRUST.github.io/projects/index.xml" rel="self" type="application/rss+xml" />
    <description>CIn-TRUST</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-gb</language><lastBuildDate>Fri, 06 Jan 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://CIn-TRUST.github.io/media/icon_hu02baf26ffacc78e885989892f8f0882a_18966_512x512_fill_lanczos_center_3.png</url>
      <title>CIn-TRUST</title>
      <link>https://CIn-TRUST.github.io/projects/</link>
    </image>
    
    <item>
      <title>Formal analysis of blockchain components | Current Project</title>
      <link>https://CIn-TRUST.github.io/projects/blockchain/</link>
      <pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/blockchain/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;This project investigates different applications of formal analysis in the context of blockchain systems.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;The prime example is (and the focus of the project will be) the formal analysis of smart contracts to ensure that they behave as intended by the developer. The methods and technologies developed in the project have the potential to propel the adoption of blockchain systems. The Project is a cooperation between CIn-UFPE, in Brazil, and TBTL, in Oxford-UK.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Model transformation from RoboSim to network of timed automata for UPPAAL | Current Project</title>
      <link>https://CIn-TRUST.github.io/projects/robosim2uppaal/</link>
      <pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/robosim2uppaal/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;This project investigates how to transform from RoboSim models to timed automata.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;We propose a model transformation method based on TA patterns and mapping rules, and develop a real-time automatic transformation tool from RoboSim model to NTA model for UPPAAL. This work was successfully applied to the real case Alpha algorithm. The next steps are: 1. Automatic generation of properties for robots. 2. Propose a new DSML for modeling specific environment.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>RoboTIC@ – Information and communication technology for robotics and applications | Current Project</title>
      <link>https://CIn-TRUST.github.io/projects/robotic@/</link>
      <pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/robotic@/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;The main objective of this project is to create a systematic and rigorous methodology to specify, verify, design and implement robotic applications.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;It is one of the projects of &lt;a href=&#34;https://ines.org.br/&#34; target=&#34;_blank&#34;&gt;INES&lt;/a&gt; and is part of the &lt;a href=&#34;https://www.cs.york.ac.uk/RoboStar/&#34; target=&#34;_blank&#34;&gt;RoboStar&lt;/a&gt; initiative. The focus is on the design of a graphical simulation language, RoboSim, and mapping models in RoboSim to several target platforms: Arduino, B and Simulink/Stateflow, among others. Development of the final implementations from the simulations is also in scope. Finally, we will also consider probabilistic models, modelling of the environment and the development of real world applications.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>A model-based framework for compositional verification and testing of reactive systems | Current Project</title>
      <link>https://CIn-TRUST.github.io/projects/reactive/</link>
      <pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/reactive/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;This project proposes an integrated framework for the verification and testing of reactive systems.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;The framework is based on the Model-Driven Engineering (MDE) methodology and it is compositional; the verification and testing of complex systems reuses the analyses performed with respect to the system components. The compositional approach is essential for achieving scalability, a typical challenge for formal verification. As input, we consider models in SysML, but also textual specifications in a controlled natural language.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>National Institute of Science and Technology in Software Engineering | Current Project</title>
      <link>https://CIn-TRUST.github.io/projects/ines/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/ines/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;INES (National Institute of Science and Technology for Software Engineering) has as a global theme to promote software development with high productivity by systematically applying the factory philosophy.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;Due to the lack of productivity and quality in software development nowadays, there is urging in applying manufacturing and software engineering techniques, in order to leverage the same benefits found in other engineering fields. This is the actual definition for Software Factories, on which there is a cost-effective assembly process and constant yearning for innovation.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;The developed systems will primarily have, in measurable and configurable ways, a high level of dependability. In special, INES&#39; initiatives aim at radically diminishing project failure rate, rising satisfaction in product quality, with controlled cost and benefit.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;As such, the Institute will state and control the execution of activities with short-, mid- and long-term goals. It will also coordinate contributions from all institutions and research groups in this proposal. In general, researchers&#39; areas within the Institute incorporate activities such as definition, creation, and deployment of effective software factories, with strong emphases not only in high productivity but also with measurable and controlled dependability.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;Specifically, researchers will work on a number of research themes connected to the desired goal:&lt;/div&gt;
&lt;ul&gt;
	&lt;li&gt;systematic reuse and software product lines;&lt;/li&gt;
	&lt;li&gt;validation and verification of systems;&lt;/li&gt;
	&lt;li&gt;techniques for software evolution and automatic refactoring&lt;/li&gt;
	&lt;li&gt;model-driven development;&lt;/li&gt;
	&lt;li&gt;domain-specific languages;&lt;/li&gt;
	&lt;li&gt;software quality;&lt;/li&gt;
	&lt;li&gt;experimental software engineering.&lt;/li&gt;
&lt;/ul&gt;
&lt;div align=&#34;justify&#34;&gt;INES already has federal (MCT/CNPq/FNDCT/CAPES) and state (FACEPE) official funding around 2,8 millions of Reais to start its activities. Considering those approved projects that foment the Institute creation, the following institutions participate in the initiative as founders institutions: UFPE (INES headquarters), CESAR and UFRPE (Recife-PE), FACAPE (Petrolina-PE), UFBA (Salvador-BA), UFCG (Campina Grande-PB), UFPB (João Pessoa-PB), UFRN (Natal-RN), e UFS (Aracaju-SE).&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Software validation and test automation | Current Project</title>
      <link>https://CIn-TRUST.github.io/projects/motorola/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/motorola/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;This project is an R&amp;D cooperation with Motorola Mobility.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;The project includes the following main goals: developing innovative strategies for automating functional testing, and generating test cases from natural language specifications. The research challenges involve a wide range of areas such as test prioritisation, test generation, test automation, natural language processing, image processing, audio processing, data analytics, among others.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Compositional modelling, verification and testing of systems with applications in the aerospace industry | Concluded in 2018</title>
      <link>https://CIn-TRUST.github.io/projects/embraer/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/embraer/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;In this project, we propose the systematisation of various aspects of the development of complex systems, particularly, with an emphasis on Systems of Systems (SoS).&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;The project scope includes modelling (semiformal and formal), verification (formal analysis of properties of interest), and testing of such systems. We use SysML to describe requirements and models of SoSs. SysML models are translated (automatically) into Circus models. Circus combines the process algebra CSP, to express reactive aspects, the language Z, to express data, and Dijkstra’s notation of guarded commands. With the support of Embraer, it is also part of the project’s scope an industrial evaluation of the proposed modelling, verification and testing strategies.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>COMPASS – Comprehensive Modelling for Advanced Systems of Systems | Concluded in 2014</title>
      <link>https://CIn-TRUST.github.io/projects/compass/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/compass/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;COMPASS will augment existing industry tools and practice with an underlying modelling language in which Systems of Systems (SoS) architectures and contracts can be expressed.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;A formal semantic foundation–the first to be developed specifically for SoS engineering–will enable this language to support analysis of global SoS properties. The language and methods will be supported by an open, extendible tools platform with integrated prototype plug-ins for model construction, dynamic analysis by simulation and test automation, static analysis by model-checking and proof, and links to an established architectural modelling language (SysML). These strengthened foundations and tools will support enhanced methods guidelines that help users embed this new technology in industrial SoS practice. Technical advances in COMPASS are focussed on industry needs evaluated through substantial industry-led case studies in three diverse and complementary areas. These will be augmented by challenge problems solicited from a range of SoS stakeholders and developer organisations through a special interest group. The open platform, tools plug-ins, semantics, development guidelines, industry case study experience and challenge problems will ensure that COMPASS&#39;s outputs can be readily exploited by SoS developers and stakeholders as well as in future research and development.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Combining formal methods and testing in the construction of real-time embedded systems | Concluded in 2010</title>
      <link>https://CIn-TRUST.github.io/projects/temporeal/</link>
      <pubDate>Fri, 01 Jan 2010 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/temporeal/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;This project aims to combine the use of formal methods and model-based testing in the context of real-time embedded systems.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;The project considers the following research agenda: (1) investigate models for specifying heterogeneous systems, considering nondeterminism and time; (2) develop modelling patterns to embedded systems considering state- and process-based formalisms; (3) propose development patterns based on model refinement; (4) enable automatic code generation for both hardware and software; (5) develop a suitable formal testing theory that takes into account partial specifications; and (6) propose test selection strategies based on similarity functions.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>DARE-COOP – Development and Applications of a Refinement Calculus for Object-Oriented Programming | Concluded in 2005</title>
      <link>https://CIn-TRUST.github.io/projects/darecoop/</link>
      <pubDate>Sat, 01 Jan 2005 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/darecoop/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;The main goal of this project is to consolidate a refinement calculus for object-oriented languages such as Java, taking into account previous works, such as Morgan’s refinement calculus.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;The proposed calculus should include basic algebraic rules for program transformation, as well as high-level rules that systematise the state-of-the-practice of object-oriented designs. The rules should be proved considering the semantics (based on weakest precondition) of the given language. Some case studies and a compiler (based on rewriting rules) are going to be developed as an exercise of the application of the rules. In a previous project (CO-OP) the emphasis was on a language with copy semantics. Differently, in this project, we consider reference semantics, besides supporting more elaborate constructions such as abstract classes, interfaces and packages.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>PISH -- Integrated Software and Hardware Design | Concluded in 1997</title>
      <link>https://CIn-TRUST.github.io/projects/pish/</link>
      <pubDate>Thu, 02 Jan 1997 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/pish/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;The main goal of this project is to develop a CAD system that supports the design of complex digital systems composed of software and hardware components.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;The aforementioned goal is going to be achieved by the development of five subprojects: (1) software and hardware partitioning; (2) formal verification; (3) software and hardware synthesis; (4) prototype generation; and (5) implementation generation. A single and common example is going to be used by all subprojects.&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Provably Correct Systems | Concluded in 1997</title>
      <link>https://CIn-TRUST.github.io/projects/correctsystems/</link>
      <pubDate>Wed, 01 Jan 1997 00:00:00 +0000</pubDate>
      <guid>https://CIn-TRUST.github.io/projects/correctsystems/</guid>
      <description>&lt;div align=&#34;justify&#34;&gt;This project is dedicated to cover the entire development process for critical embedded systems, from the original capture of requirements to the computers and special-purpose hardware on which the developed programs run.&lt;/div&gt;
&lt;br&gt;
&lt;div align=&#34;justify&#34;&gt;The cooperation proposed here is in the context of the ESPRIT Basic Research PROCOS II project (no.7071) on Provably Correct Systems. The emphasis is on a constructive approach to correctness, using proven algebraic transformations between adjacent phases of development: specifications, designs, programs, compilers and hardware. The purpose of this cooperation is to explore the development of embedded systems in such a way that the final implementation may include both software and hardware components. Rather than producing only machine code as the final implementation (as stated in the original objectives of PROCOS I), the aim is to design a partitioning algorithm which, based on some function of cost, determines what should be implemented in software and in hardware. The main concern is not the discovery of an original partitioning algorithm, but rather a correct design of (possibly an existing) one.&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
